@model GroceryStore.Models.AddressModel;

<div class="row mt-3 mx-3 justify-content-center" style="margin-top:25px ;">
    <div class="col-md-9 justify-content-center">
        <div class="card card-custom pb-4" id="addresscard">
            <div class="card-body mt-0 mx-5">
                <h4 class="mt-5">Shipping Address</h4>
                @using (Html.BeginForm("GetAddress", "Order", FormMethod.Post, new { @id = "Address", @class = "mb-0 mt-5" }))
                {
                    <div class="row mb-4">
                        <div class="col">
                            <div data-mdb-input-init class="form-outline">
                                @Html.TextBox("AddressLine1", "", new { @class = "form-control", @id = "AddressLine1" })
                                <label style="color: black" for="AddressLine1">Address Line 1</label>
                                <br />
                                <label class="error" style="color: lightgreen" for="AddressLine1"></label>
                            </div>
                        </div>
                        <div class="col">
                            <div data-mdb-input-init class="form-outline">
                                @Html.TextBox("AddressLine2", "", new { @class = "form-control", @id = "AddressLine2" })
                                <label style="color: black" for="AddressLine2">Address Line 2</label>
                            </div>
                        </div>
                    </div>
                    <div class="row mb-4">
                        <div class="col">
                            <div data-mdb-input-init class="form-outline">
                                @Html.TextBox("City", "", new { @class = "form-control", @id = "City", @oninput = "this.value=(this.value.match('[A-Z a-z]+'))" })
                                <label style="color: black" for="City">City</label>
                                <br />
                                <label class="error" style="color: lightgreen" for="City"></label>
                            </div>
                        </div>
                        <div class="col">
                            <div data-mdb-input-init class="form-outline">
                                @Html.TextBox("Zip", "", new { @class = "form-control", @id = "Zip", @oninput = "this.value=(this.value.match('[0-9]+'))" })
                                <label style="color: black" for="Zip">Zip</label>
                                <br />
                                <label class="error" style="color: lightgreen" for="Zip"></label>
                            </div>
                        </div>
                    </div>
                    <a class="btn btn-dark text-white text-uppercase rounded-pill" asp-controller="Product" asp-action="Mart">
                        ❮ Back
                    </a>
                    <div class="float-end ">
                        <button type="submit" class="btn btn-primary btn-rounded" style="background-color: #0062CC ;">
                            Place order
                        </button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<style>
    #addresscard {
        background: -webkit-linear-gradient(left, #3931af, #00c6ff) !important;
    }


    .input-custom {
        background-color: white;
    }
</style>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/jquery.validation/1.19.5/jquery.validate.min.js"></script>

    <script>
        $(document).ready(function () {
            var message = '@TempData["ToastrMessage"]';
            var type = '@TempData["ToastrType"]';
            if (message) {
                toastr.options = {
                    progressBar: true,
                    positionClass: 'toast-top-right'
                };
                toastr[type](message);
            }

            $("#Address").validate({
                rules: {
                    AddressLine1: { required: true },
                    City: { required: true },
                    Zip: { required: true }
                },
                messages: {
                    AddressLine1: { required: "Address is a required field" },
                    City: { required: "City is a required field" },
                    Zip: { required: "Zip code is required" }
                }
            });
        });
    </script>

    <partial name="_ValidationScriptsPartial" />
}
